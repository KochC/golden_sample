name: Node.js CI

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with: 
          fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' # You can specify any version you prefer

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    # Checks the latest tag version and all commits since then
    # If there is a patch or minor commit included, it will bump accordingly
    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: main
        noVersionBumpBehavior: current

    # Checks if the current version is the same as the next version
    - name: Check if Versions are Equal
      id: check_versions
      run: |
        echo newVersion=$(test '${{ steps.semver.outputs.next }}' == '${{ steps.semver.outputs.current }}'; echo $?) >> $GITHUB_ENV

    # Updates package.json to be used in case you build a node module
    - name: Update package.json
      if: env.newVersion == '1'
      run: |
        npm version ${{ steps.semver.outputs.nextStrict }} --no-git-tag-version

    # Will push all commits since the last release into the CHANGELOG.md file
    - name: Create changelog.md
      if: env.newVersion == '1'
      run: |
        npm run changelog

    # Publish new release
    - name: Publish Release
      if: env.newVersion == '1'
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        tag: ${{ steps.semver.outputs.next }}
        draft: false
        makeLatest: true
        name: Release ${{ steps.semver.outputs.next }}
        bodyFile: "CHANGELOG.md"
        token: ${{ github.token }}
        artifacts: "dummy.bin"

    # Update latest git tag to allow proper versioning
    - name: Update tag version
      if: env.newVersion == '1'
      run: |
        git tag ${{ steps.semver.outputs.next }}
        git push origin ${{ steps.semver.outputs.next }}